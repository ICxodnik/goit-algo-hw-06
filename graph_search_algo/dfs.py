def dfs_iterative(graph, start_vertex):
    visited = set()
    # Використовуємо стек для зберігання вершин
    stack = [start_vertex]  
    while stack:
        # Вилучаємо вершину зі стеку
        vertex = stack.pop()  
        if vertex not in visited:
            print(vertex, end=' ')
            # Відвідуємо вершину
            visited.add(vertex)
            # Додаємо сусідні вершини до стеку
            neighbors = list(graph[vertex])
            stack.extend(reversed(neighbors))  

if __name__ == "__main__":
    graph = {
        'Головна': {'Кловська': 2, 'Палац Спорту': 3},
        'Кловська': {'Головна': 2, 'Палац Спорту': 2, 'Арсенальна': 4},
        'Палац Спорту': {'Головна': 3, 'Кловська': 2, 'Печерська': 4},
        'Печерська': {'Палац Спорту': 4, 'Арсенальна': 3, 'Либідська': 5},
        'Арсенальна': {'Кловська': 4, 'Печерська': 3},
        'Либідська': {'Печерська': 5, 'Дружби Народів': 6},
        'Дружби Народів': {'Либідська': 6, 'Голосіївська': 4},
        'Голосіївська': {'Дружби Народів': 4, 'Виставковий центр': 3},
        'Виставковий центр': {'Голосіївська': 3}
    }

    dfs_iterative(graph, 'Головна')
